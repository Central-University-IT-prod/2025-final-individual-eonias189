// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	AIHandler
	AdsHandler
	AdvertisersHandler
	CampaignsHandler
	ClientsHandler
	StatisticsHandler
	TimeHandler
}

// AIHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: AI
type AIHandler interface {
	// GenerateAdText implements generateAdText operation.
	//
	// Генерирует текст рекламного объявления.
	//
	// POST /ai/generate-ad-text
	GenerateAdText(ctx context.Context, req *GenerateAdTextReq) (GenerateAdTextRes, error)
	// ModerateAdText implements moderateAdText operation.
	//
	// Модерирует текст рекламного объявления.
	//
	// POST /ai/moderate-ad-text
	ModerateAdText(ctx context.Context, req *ModerateAdTextReq) (ModerateAdTextRes, error)
}

// AdsHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Ads
type AdsHandler interface {
	// GetAdForClient implements getAdForClient operation.
	//
	// Возвращает рекламное объявление, подходящее для
	// показа клиенту с учетом таргетинга и ML скора.
	//
	// GET /ads
	GetAdForClient(ctx context.Context, params GetAdForClientParams) (GetAdForClientRes, error)
	// RecordAdClick implements recordAdClick operation.
	//
	// Фиксирует клик (переход) клиента по рекламному
	// объявлению.
	//
	// POST /ads/{adId}/click
	RecordAdClick(ctx context.Context, req *RecordAdClickReq, params RecordAdClickParams) (RecordAdClickRes, error)
}

// AdvertisersHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Advertisers
type AdvertisersHandler interface {
	// GetAdvertiserById implements getAdvertiserById operation.
	//
	// Возвращает информацию о рекламодателе по его ID.
	//
	// GET /advertisers/{advertiserId}
	GetAdvertiserById(ctx context.Context, params GetAdvertiserByIdParams) (GetAdvertiserByIdRes, error)
	// UpsertAdvertisers implements upsertAdvertisers operation.
	//
	// Создаёт новых или обновляет существующих
	// рекламодателей.
	//
	// POST /advertisers/bulk
	UpsertAdvertisers(ctx context.Context, req []AdvertiserUpsert) (UpsertAdvertisersRes, error)
	// UpsertMLScore implements upsertMLScore operation.
	//
	// Добавляет или обновляет ML скор для указанной пары
	// клиент-рекламодатель.
	//
	// POST /ml-scores
	UpsertMLScore(ctx context.Context, req *MLScore) (UpsertMLScoreRes, error)
}

// CampaignsHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Campaigns
type CampaignsHandler interface {
	// CreateCampaign implements createCampaign operation.
	//
	// Создаёт новую рекламную кампанию для указанного
	// рекламодателя.
	//
	// POST /advertisers/{advertiserId}/campaigns
	CreateCampaign(ctx context.Context, req *CampaignCreate, params CreateCampaignParams) (CreateCampaignRes, error)
	// DeleteCampaign implements deleteCampaign operation.
	//
	// Удаляет рекламную кампанию рекламодателя по
	// заданному campaignId.
	//
	// DELETE /advertisers/{advertiserId}/campaigns/{campaignId}
	DeleteCampaign(ctx context.Context, params DeleteCampaignParams) (DeleteCampaignRes, error)
	// GetCampaign implements getCampaign operation.
	//
	// Получение кампании по ID.
	//
	// GET /advertisers/{advertiserId}/campaigns/{campaignId}
	GetCampaign(ctx context.Context, params GetCampaignParams) (GetCampaignRes, error)
	// ListCampaigns implements listCampaigns operation.
	//
	// Возвращает список рекламных кампаний для указанного
	// рекламодателя с пагинацией.
	//
	// GET /advertisers/{advertiserId}/campaigns
	ListCampaigns(ctx context.Context, params ListCampaignsParams) (ListCampaignsRes, error)
	// UpdateCampaign implements updateCampaign operation.
	//
	// Обновляет разрешённые параметры рекламной кампании
	// до её старта.
	//
	// PUT /advertisers/{advertiserId}/campaigns/{campaignId}
	UpdateCampaign(ctx context.Context, req *CampaignUpdate, params UpdateCampaignParams) (UpdateCampaignRes, error)
	// UploadCampaignImage implements uploadCampaignImage operation.
	//
	// Загружает изображение рекламного объявления. Если не
	// передать изображение, то прежнее удалится.
	//
	// PUT /advertisers/{advertiserId}/campaigns/{campaignId}/image
	UploadCampaignImage(ctx context.Context, req UploadCampaignImageReq, params UploadCampaignImageParams) (UploadCampaignImageRes, error)
}

// ClientsHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Clients
type ClientsHandler interface {
	// GetClientById implements getClientById operation.
	//
	// Возвращает информацию о клиенте по его ID.
	//
	// GET /clients/{clientId}
	GetClientById(ctx context.Context, params GetClientByIdParams) (GetClientByIdRes, error)
	// UpsertClients implements upsertClients operation.
	//
	// Создаёт новых или обновляет существующих клиентов.
	//
	// POST /clients/bulk
	UpsertClients(ctx context.Context, req []ClientUpsert) (UpsertClientsRes, error)
}

// StatisticsHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Statistics
type StatisticsHandler interface {
	// GetAdvertiserCampaignsStats implements getAdvertiserCampaignsStats operation.
	//
	// Возвращает сводную статистику по всем рекламным
	// кампаниям, принадлежащим заданному рекламодателю.
	//
	// GET /stats/advertisers/{advertiserId}/campaigns
	GetAdvertiserCampaignsStats(ctx context.Context, params GetAdvertiserCampaignsStatsParams) (GetAdvertiserCampaignsStatsRes, error)
	// GetAdvertiserDailyStats implements getAdvertiserDailyStats operation.
	//
	// Возвращает массив ежедневной сводной статистики по
	// всем рекламным кампаниям заданного рекламодателя.
	//
	// GET /stats/advertisers/{advertiserId}/campaigns/daily
	GetAdvertiserDailyStats(ctx context.Context, params GetAdvertiserDailyStatsParams) (GetAdvertiserDailyStatsRes, error)
	// GetCampaignDailyStats implements getCampaignDailyStats operation.
	//
	// Возвращает массив ежедневной статистики для
	// указанной рекламной кампании.
	//
	// GET /stats/campaigns/{campaignId}/daily
	GetCampaignDailyStats(ctx context.Context, params GetCampaignDailyStatsParams) (GetCampaignDailyStatsRes, error)
	// GetCampaignStats implements getCampaignStats operation.
	//
	// Возвращает агрегированную статистику (показы,
	// переходы, затраты и конверсию) для заданной рекламной
	// кампании.
	//
	// GET /stats/campaigns/{campaignId}
	GetCampaignStats(ctx context.Context, params GetCampaignStatsParams) (GetCampaignStatsRes, error)
}

// TimeHandler handles operations described by OpenAPI v3 specification.
//
// x-ogen-operation-group: Time
type TimeHandler interface {
	// AdvanceDay implements advanceDay operation.
	//
	// Устанавливает текущий день в системе в заданную дату.
	//
	// POST /time/advance
	AdvanceDay(ctx context.Context, req OptAdvanceDayReq) (AdvanceDayRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
